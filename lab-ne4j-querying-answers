1. Basic Node Retrieval
Task: List all movies released in the year 1999.
Goal: Practice filtering node properties.

MATCH (m:Movie) WHERE m.released = 1999
RETURN m.title, m.released

2. Find a Person by Name
Task: Retrieve details for the person named Keanu Reeves.
Goal: Query nodes by exact property match.

MATCH (p:Person {name: "Keanu Reeves"})
RETURN p

3. Find Actors in a Movie
Task: List all actors who acted in The Matrix.
Goal: Traverse relationships from a movie to actors.

MATCH (p:Person)-[:ACTED_IN]->(:Movie {title: "The Matrix"})
RETURN p.name

4. Directors of a Movie
Task: Find the director(s) of The Matrix Revolutions.
Goal: Filter relationships by type (DIRECTED).

MATCH (p:Person)-[:DIRECTED]->(:Movie {title: "The Matrix"})
RETURN p.name

5. Movies by Genre and Year
Task: Find all Action movies released after 2000.
Goal: Combine relationship traversal and property filtering.

-- no genre, ran a different query instead:
MATCH (m:Movie) WHERE m.released >= 1999 AND m.released <= 2000
RETURN m.title, m.released

6. Co-Actors of an Actor
Task: Find all actors who worked with Tom Hanks in any movie.
Goal: Use variable-length patterns and deduplication (DISTINCT).

MATCH (:Person {name: "Tom Hanks"})-[:ACTED_IN]->(m)<-[:ACTED_IN]-(coActors)
RETURN DISTINCT coActors.name

7. Movies with Multiple Relationships
Task: Find all people who either acted in or directed Cloud Atlas.
Goal: Filter relationship types dynamically.    

MATCH (p:Person)-[:ACTED_IN|DIRECTED]->(:Movie {title: "Cloud Atlas"})
RETURN DISTINCT p.name

8. Shortest Path Between Actors
Task: Find the shortest path between Tom Hanks and Meg Ryan through co-acting.
Goal: Use shortestPath and variable-length relationships.

MATCH path=shortestPath(
(:Person {name:"Tom Hanks"})-[*]-(:Person {name:"Meg Ryan"}) 
)
RETURN path, length(path) / 2 AS distance

9. Aggregation with HAVING
Task: List actors who have acted in at least 3 movies.
Goal: Use WITH and HAVING-like filtering.

MATCH (p:Person)-[:ACTED_IN]-(m:Movie)
WITH p, count(m) AS movieCount
WHERE movieCount >= 3
RETURN p.name as Actor, movieCount

10. Complex Graph Pattern (Advanced)
Task: Find all directors who also acted in their own movies.
Goal: Combine multiple relationships on the same node.

MATCH (p:Person)-[:DIRECTED]->(m:Movie)
MATCH (p:Person)-[:ACTED_IN]->(m:Movie)
RETURN DISTINCT p.name
